name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    env:
      MY_POSTGRES_NAME: github_actions
      MY_POSTGRES_USER: postgres
      MY_POSTGRES_PASSWORD: postgres
      MY_POSTGRES_DB: nifek
      MY_POSTGRES_HOST: '127.0.0.1'
      MY_POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: test_key
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_NAME: ${{ env.MY_POSTGRES_NAME }}
          POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.MY_POSTGRES_DB }}
          POSTGRES_HOST: ${{ env.MY_POSTGRES_HOST }}
          POSTGRES_PORT: ${{ env.MY_POSTGRES_PORT }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Running Tests with Coverage
      env:
        DEBUG: "0"
        DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
        POSTGRES_NAME: ${{ env.MY_POSTGRES_NAME }}
        POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ env.MY_POSTGRES_HOST }}
        POSTGRES_PORT: ${{ env.MY_POSTGRES_PORT }}
        EMAIL_BACKEND: django.core.mail.backends.filebased.EmailBackend
      run: |
        make coverage
    - uses: actions/upload-artifact@v2
      with:
        name: Upload Coverage Artifact
        path: htmlcov
